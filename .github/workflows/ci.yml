name: CI Pipeline

on:
  push:
    branches:
      - main
      - paul
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup Node + Angular
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

  unit-and-integration-tests:
    name: Unit & Integration Tests (Jest)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Run backend Jest tests
        run: |
          cd backend
          npm test

  e2e-tests:
    name: Cypress End-to-End Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Start backend server
        run: |
          cd backend
          npm start &
        env:
          MONGO_URL: mongodb://localhost:27017/test

      - name: Start frontend server
        run: |
          npm start &
        env:
          NODE_ENV: test

      - name: Wait for servers to be ready
        run: sleep 10

      - name: Run Cypress tests
        run: npx cypress run


  performance-tests:
    name: JMeter Performance Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install JMeter
        run: sudo apt-get install -y jmeter

      - name: Run JMeter test
        run: |
          jmeter -n -t tests/performance/jmeter.jmx -l results.jtl

  owasp-zap-scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Start backend server
        run: |
          cd backend
          npm start &
        env:
          MONGO_URL: mongodb://localhost:27017/test

      - name: Wait for backend to be ready
        run: sleep 10

      - name: Run OWASP ZAP Scan
        run: |
          docker run --rm -v $(pwd):/zap/wrk:rw -t ghcr.io/zaproxy/zaproxy zap-full-scan.py \
          -t http://localhost:3000 \
          -r zap_report.html
